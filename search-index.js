var searchIndex = JSON.parse('{\
"storages":{"doc":"Test Status Coverage Status Docs main Docs.rs Crates.io…","i":[[0,"boxed","storages","",null,null],[3,"RawBox","storages::boxed","A thin wrapper around a buffer.",null,null],[3,"Box","","",null,null],[11,"new","","Allocates memory on the global heap and then places…",0,[[]]],[11,"new_uninit","","Constructs a new box with uninitialized contents.",0,[[],[["box",3],["maybeuninit",19],["allocatedbuffer",3]]]],[11,"new_zeroed","","Constructs a new box with uninitialized contents, with the…",0,[[],[["box",3],["maybeuninit",19],["allocatedbuffer",3]]]],[11,"new_uninit_slice","","Constructs a boxed slice with uninitialized contents.",0,[[],[["box",3],["allocatedbuffer",3]]]],[11,"new_zeroed_slice","","Constructs a boxed with uninitialized contents with the…",0,[[],[["box",3],["allocatedbuffer",3]]]],[11,"new_in","","Places the value in the provided buffer.",0,[[]]],[11,"new_uninit_in","","Constructs a new box with uninitialized contents in the…",0,[[],[["maybeuninit",19],["box",3]]]],[11,"new_uninit_slice_in","","Constructs a boxed with uninitialized contents in the…",0,[[],["box",3]]],[11,"assume_init","","Converts to `Box<T, B>`.",0,[[],["box",3]]],[11,"assume_init","","Constructs a boxed with uninitialized contents in the…",0,[[],["box",3]]],[0,"buffer","storages","",null,null],[3,"AllocatedBuffer","storages::buffer","",null,null],[8,"Buffer","","Backend for collection types like `Box` and `Vec`.",null,null],[16,"ExternalData","","Data required to be passed at every interaction with the…",1,null],[10,"as_ptr","","Returns a shared pointer to the buffered datum.",1,[[]]],[10,"as_mut_ptr","","Returns a unique pointer to the buffered datum.",1,[[]]],[8,"UnmanagedBuffer","","A buffer, which uses an external resource",null,null],[10,"free_unchecked","","Frees the backed resource.",2,[[]]],[11,"free","","Frees the backed resource",2,[[]]],[11,"from","storages::boxed","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","storages::buffer","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"as_ptr","","",4,[[]]],[11,"as_mut_ptr","","",4,[[]]],[11,"as_ptr","","",4,[[]]],[11,"as_mut_ptr","","",4,[[]]],[11,"as_ptr","","",4,[[]]],[11,"as_mut_ptr","","",4,[[]]],[11,"free_unchecked","","",4,[[]]],[11,"deref","storages::boxed","",3,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",3,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"new","","Allocates memory on the global heap and then places…",3,[[]]],[11,"new_uninit","","Constructs a new raw box with uninitialized contents.",3,[[],[["maybeuninit",19],["allocatedbuffer",3],["rawbox",3]]]],[11,"new_zeroed","","Constructs a new raw box with uninitialized contents, with…",3,[[],[["maybeuninit",19],["allocatedbuffer",3],["rawbox",3]]]],[11,"new_uninit_slice","","Constructs a boxed slice with uninitialized contents.",3,[[],[["rawbox",3],["allocatedbuffer",3]]]],[11,"new_zeroed_slice","","Constructs a boxed with uninitialized contents with the…",3,[[],[["rawbox",3],["allocatedbuffer",3]]]],[11,"new_in","","Places the value in the provided buffer.",3,[[]]],[11,"new_uninit_in","","Constructs a new raw box with uninitialized contents in…",3,[[],[["rawbox",3],["maybeuninit",19]]]],[11,"new_uninit_slice_in","","Constructs a boxed with uninitialized contents in the…",3,[[],["rawbox",3]]],[11,"assume_init","","Converts to `RawBox<T, B>`.",3,[[],["rawbox",3]]],[11,"assume_init","","Constructs a boxed with uninitialized contents in the…",3,[[],["rawbox",3]]],[11,"free","","",3,[[]]],[11,"buffer","","",3,[[]]],[11,"buffer_mut","","",3,[[]]],[11,"as_ref","","",3,[[]]],[11,"as_mut","","",3,[[]]],[11,"from_raw","storages::buffer","",4,[[["nonnull",3]]]],[11,"new","","",4,[[],[["allocerror",3],["result",4]]]],[11,"new_zeroed","","",4,[[],[["allocerror",3],["result",4]]]],[11,"new_in","","",4,[[],[["allocerror",3],["result",4]]]],[11,"new_zeroed_in","","",4,[[],[["allocerror",3],["result",4]]]],[11,"new_slice","","",4,[[],[["allocerror",3],["result",4]]]],[11,"new_slice_zeroed","","",4,[[],[["allocerror",3],["result",4]]]]],"p":[[3,"Box"],[8,"Buffer"],[8,"UnmanagedBuffer"],[3,"RawBox"],[3,"AllocatedBuffer"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);